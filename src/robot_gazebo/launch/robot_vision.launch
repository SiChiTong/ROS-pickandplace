<launch>
    <arg name="paused" default="false"/>
    <arg name="gazebo_gui" default="true" doc="Parameter to determine whether to show Gazebo GUI, disable for performance"/>

    <!-- remap topics to joint_trajectory_action controller -->
    <!-- <remap from="/csda10f/csda10f_r1_controller/follow_joint_trajectory" to="/csda10f/csda10f_r1_controller/joint_trajectory_action" />
    <remap from="/csda10f/csda10f_r2_controller/follow_joint_trajectory" to="/csda10f/csda10f_r2_controller/joint_trajectory_action" />
    <remap from="/csda10f/csda10f_b1_controller/follow_joint_trajectory" to="/csda10f/csda10f_b1_controller/joint_trajectory_action" />
    <remap from="/csda10f/csda10f_b2_controller/follow_joint_trajectory" to="/csda10f/csda10f_b2_controller/joint_trajectory_action" /> -->

    <!-- remap topic joint_state from gazebo to Rviz -->
    <!-- <remap from="/csda10f/joint_states" to="/joint_states" /> -->


    <!-- startup simulated world -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(find robot_gazebo)/worlds/robot.world"/>
        <arg name="gui" value="$(arg gazebo_gui)"/>
        <arg name="paused" value="$(arg paused)"/>
    </include>

    <!-- urdf xml robot description loaded on the Parameter Server, converting the xacro into a proper urdf file-->
    <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find robot_description)/urdf/robot.xacro'" />

    <!-- push robot_description to factory and spawn robot in gazebo -->
    <node name="robot_spawn" pkg="gazebo_ros" type="spawn_model" output="screen" args="-urdf -param robot_description -model zealrobot" />

    <!-- Publish the robot state -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher">
      <param name="publish_frequency" value="20.0"/>
    </node>

    <!-- Provide simulated control of the robot joint angles -->
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
      <param name="use_gui" value="false" />
      <param name="rate" value="20.0"/>
    </node>

    <!-- init and start Gazebo ros_control interface -->
    <include file="$(find robot_gazebo)/launch/robot_control.launch"/>

	  <!-- Process camera inputs to generate cloud data with color information-->
   	<!-- <include file="$(find robot_gazebo)/launch/depth_img_processing.launch"/> -->

    <!-- 运行rviz可视化界面 -->
  	<node name="rviz" pkg="rviz" type="rviz" args="-d $(find robot_description)/config/vision.rviz" required="true" output="screen"/>


</launch>
